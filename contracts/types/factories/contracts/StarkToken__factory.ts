/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StarkToken,
  StarkTokenInterface,
} from "../../contracts/StarkToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "messagge",
        type: "string",
      },
    ],
    name: "LimitReached",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001239380380620012398339810160408190526200003491620001e6565b6040518060400160405280600a81526020016929ba30b935aa37b5b2b760b11b81525060405180604001604052806005815260200164535441524b60d81b8152508160039081620000869190620002a4565b506004620000958282620002a4565b505050620000b2620000ac620000c560201b60201c565b620000c9565b620000be33826200011b565b5062000398565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001765760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200018a919062000370565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b600060208284031215620001f957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022b57607f821691505b6020821081036200024c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001e157600081815260208120601f850160051c810160208610156200027b5750805b601f850160051c820191505b818110156200029c5782815560010162000287565b505050505050565b81516001600160401b03811115620002c057620002c062000200565b620002d881620002d1845462000216565b8462000252565b602080601f831160018114620003105760008415620002f75750858301515b600019600386901b1c1916600185901b1785556200029c565b600085815260208120601f198616915b82811015620003415788860151825594840194600190910190840162000320565b5085821015620003605787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200039257634e487b7160e01b600052601160045260246000fd5b92915050565b610e9180620003a86000396000f3fe6080604052600436106100fe5760003560e01c806370a082311161009557806395d89b411161006457806395d89b41146102a1578063a457c2d7146102b6578063a9059cbb146102d6578063dd62ed3e146102f6578063f2fde38b1461031657600080fd5b806370a082311461020e578063715018a61461024457806379cc6790146102595780638da5cb5b1461027957600080fd5b8063313ce567116100d1578063313ce5671461019d57806339509351146101b957806340c10f19146101d957806342966c68146101ee57600080fd5b806306fdde0314610103578063095ea7b31461012e57806318160ddd1461015e57806323b872dd1461017d575b600080fd5b34801561010f57600080fd5b50610118610336565b6040516101259190610ca3565b60405180910390f35b34801561013a57600080fd5b5061014e610149366004610d0d565b6103c8565b6040519015158152602001610125565b34801561016a57600080fd5b506002545b604051908152602001610125565b34801561018957600080fd5b5061014e610198366004610d37565b6103e2565b3480156101a957600080fd5b5060405160128152602001610125565b3480156101c557600080fd5b5061014e6101d4366004610d0d565b610406565b6101ec6101e7366004610d0d565b610428565b005b3480156101fa57600080fd5b506101ec610209366004610d73565b610551565b34801561021a57600080fd5b5061016f610229366004610d8c565b6001600160a01b031660009081526020819052604090205490565b34801561025057600080fd5b506101ec61055e565b34801561026557600080fd5b506101ec610274366004610d0d565b610572565b34801561028557600080fd5b506005546040516001600160a01b039091168152602001610125565b3480156102ad57600080fd5b5061011861058b565b3480156102c257600080fd5b5061014e6102d1366004610d0d565b61059a565b3480156102e257600080fd5b5061014e6102f1366004610d0d565b610615565b34801561030257600080fd5b5061016f610311366004610dae565b610623565b34801561032257600080fd5b506101ec610331366004610d8c565b61064e565b60606003805461034590610de1565b80601f016020809104026020016040519081016040528092919081815260200182805461037190610de1565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b6000336103d68185856106c4565b60019150505b92915050565b6000336103f08582856107e8565b6103fb858585610862565b506001949350505050565b6000336103d68185856104198383610623565b6104239190610e31565b6106c4565b6001600160a01b038216600090815260208190526040902054610452826601c6bf52634000610e44565b34146104df5760405162461bcd60e51b815260206004820152604b60248201527f596f75206e65656420746f2073656e6420302e3030303520455448202835303060448201527f303030303030303030303030205765692920746f206d696e742065616368205360648201526a3a30b935902a37b5b2b71760a91b608482015260a4015b60405180910390fd5b600a81106105425760405163d19cce9160e01b815260206004820152602960248201527f596f752068617665207265616368656420746865206d6178206f6620746f6b6560448201526837399037bbb732b21760b91b60648201526084016104d6565b61054c8383610a06565b505050565b61055b3382610ac5565b50565b610566610bf7565b6105706000610c51565b565b61057d8233836107e8565b6105878282610ac5565b5050565b60606004805461034590610de1565b600033816105a88286610623565b9050838110156106085760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104d6565b6103fb82868684036106c4565b6000336103d6818585610862565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610656610bf7565b6001600160a01b0381166106bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d6565b61055b81610c51565b6001600160a01b0383166107265760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104d6565b6001600160a01b0382166107875760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104d6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006107f48484610623565b9050600019811461085c578181101561084f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104d6565b61085c84848484036106c4565b50505050565b6001600160a01b0383166108c65760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104d6565b6001600160a01b0382166109285760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104d6565b6001600160a01b038316600090815260208190526040902054818110156109a05760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104d6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361085c565b6001600160a01b038216610a5c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104d6565b8060026000828254610a6e9190610e31565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610b255760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104d6565b6001600160a01b03821660009081526020819052604090205481811015610b995760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104d6565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6005546001600160a01b031633146105705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104d6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610cd057858101830151858201604001528201610cb4565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610d0857600080fd5b919050565b60008060408385031215610d2057600080fd5b610d2983610cf1565b946020939093013593505050565b600080600060608486031215610d4c57600080fd5b610d5584610cf1565b9250610d6360208501610cf1565b9150604084013590509250925092565b600060208284031215610d8557600080fd5b5035919050565b600060208284031215610d9e57600080fd5b610da782610cf1565b9392505050565b60008060408385031215610dc157600080fd5b610dca83610cf1565b9150610dd860208401610cf1565b90509250929050565b600181811c90821680610df557607f821691505b602082108103610e1557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103dc576103dc610e1b565b80820281158282048414176103dc576103dc610e1b56fea2646970667358221220905e2178b05536ae18ad9ff93b370d226fe82ee2db75b25dc1c1624205ed58b164736f6c63430008110033";

type StarkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StarkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StarkToken__factory extends ContractFactory {
  constructor(...args: StarkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StarkToken> {
    return super.deploy(initialSupply, overrides || {}) as Promise<StarkToken>;
  }
  override getDeployTransaction(
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(initialSupply, overrides || {});
  }
  override attach(address: string): StarkToken {
    return super.attach(address) as StarkToken;
  }
  override connect(signer: Signer): StarkToken__factory {
    return super.connect(signer) as StarkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StarkTokenInterface {
    return new utils.Interface(_abi) as StarkTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StarkToken {
    return new Contract(address, _abi, signerOrProvider) as StarkToken;
  }
}
